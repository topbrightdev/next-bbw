{
  "ast": null,
  "code": "import { useState, useEffect, useCallback } from \"react\"; // Hook\n\nexport const useWindowSize = () => {\n  const isClient = false;\n  const getSize = useCallback(() => {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined\n    };\n  }, [isClient]);\n  const {\n    0: windowSize,\n    1: setWindowSize\n  } = useState(getSize());\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n\n    const handleResize = () => {\n      setWindowSize(getSize);\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [getSize, isClient]);\n  return windowSize;\n};",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}
