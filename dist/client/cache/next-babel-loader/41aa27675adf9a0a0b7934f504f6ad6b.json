{
  "ast": null,
  "code": "var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { space, border, typography, shadow, flexbox, layout } from \"styled-system\";\nconst SwitchStyled = styled.div.withConfig({\n  displayName: \"Switch__SwitchStyled\",\n  componentId: \"ko4cd5-0\"\n})([\"display:inline-block;cursor:pointer;width:72px;height:33px;border-radius:17px;transition:all 0.3s ease-out;background:\", \";position:relative;margin:0 15px;white-space:nowrap;\", \";\", \";\", \";\", \";\", \";\", \";\"], ({\n  active,\n  theme,\n  bg\n}) => active ? theme.colors[bg] : `#eae9f2`, border, space, typography, shadow, flexbox, layout);\nconst Round = styled.span.withConfig({\n  displayName: \"Switch__Round\",\n  componentId: \"ko4cd5-1\"\n})([\"width:21px;height:21px;background-color:#ffffff;position:absolute;transition:all 0.3s ease-out;left:\", \";margin-left:6px;top:0;margin-top:6px;transition:0.4s;border-radius:500px;pointer-events:none;\"], ({\n  active\n}) => active ? `calc(100% - 33px)` : `0`);\n\nconst Switch = (_ref) => {\n  let {\n    bg = \"secondary\",\n    onClick = () => {}\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"bg\", \"onClick\"]);\n\n  const {\n    0: active,\n    1: setActive\n  } = useState(false);\n\n  const handleSwitch = () => {\n    setActive(!active);\n    onClick();\n  };\n\n  return __jsx(SwitchStyled, _extends({\n    bg: bg\n  }, rest, {\n    onClick: handleSwitch,\n    active: active ? 1 : 0\n  }), __jsx(Round, {\n    active: active ? 1 : 0\n  }));\n};\n\nexport default Switch;",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}
