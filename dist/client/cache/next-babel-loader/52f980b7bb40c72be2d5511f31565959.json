{
  "ast": null,
  "code": "import _styled from \"styled-components\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport PageWrapper from '../components/PageWrapper';\nimport Search from '../components/Search';\nimport { Select } from '../components/Core';\nimport { useRouter } from 'next/router';\nimport SearchTab from '../sections/search/SearchTab';\nimport algoliasearch from 'algoliasearch';\nimport { db } from '../config/firebase.js';\nimport { filter } from 'lodash';\nconst defaultCountries = [{\n  value: 'sp',\n  label: 'Singapore'\n}, {\n  value: 'bd',\n  label: 'Bangladesh'\n}, {\n  value: 'usa',\n  label: 'United States of America'\n}, {\n  value: 'uae',\n  label: 'United Arab Emirates'\n}, {\n  value: 'pk',\n  label: 'Pakistan'\n}];\nconst defaultIndustries = [{\n  value: 'Electric Utilities',\n  label: 'Electric'\n}, {\n  value: 'Finance & Insurance Sector',\n  label: 'Finance'\n}, {\n  value: 'Health Care Sector',\n  label: 'Health Care'\n}, {\n  value: 'Manufacturing Sector',\n  label: 'Manufacturing'\n}];\nconst defaultSalaryRange = [{\n  value: '5k',\n  label: '< 5k'\n}, {\n  value: '5k10k',\n  label: '5k - 10k'\n}, {\n  value: '10k20k',\n  label: '10k - 20k'\n}, {\n  value: '20k',\n  label: '> 20k'\n}];\nconst defaultExpLevels = [{\n  value: 'entry',\n  label: 'Entry'\n}, {\n  value: 'jn',\n  label: 'Junior'\n}, {\n  value: 'mid',\n  label: 'Mid Level'\n}, {\n  value: 'sr',\n  label: 'Sinior'\n}];\nconst defaultPostedTimes = [{\n  value: 'jan',\n  label: 'January'\n}, {\n  value: 'May',\n  label: 'May'\n}, {\n  value: 'Jul',\n  label: 'July'\n}, {\n  value: 'Oct',\n  label: 'October'\n}];\n\nvar _StyledSelect = _styled(Select).withConfig({\n  displayName: \"businesses___StyledSelect\",\n  componentId: \"jz2xsb-0\"\n})([\"min-width:175px;\"]);\n\nconst SearchGrid = ({\n  companies\n}) => {\n  let {\n    0: blackBusinesses,\n    1: setBlackBusinesses\n  } = useState(companies);\n  const router = useRouter();\n\n  const getFirebaseCollectionWithFilter = async filters => {\n    let filterCollection = await db.collection('companies').where('primary_industry', 'in', filters).get().then(res => {\n      return res.docs.map(entry => entry.data());\n    }).catch(err => console.log(\"ERROR\", err));\n    return filterCollection;\n  };\n\n  const getFilters = async filters => {\n    if (filters.label !== \"Industries\") {\n      let filteredBusinesses = await getFirebaseCollectionWithFilter(filters.value);\n      setBlackBusinesses(filteredBusinesses);\n    } else {\n      setBlackBusinesses(companies);\n    }\n  };\n\n  const callBackFunction = companies => {\n    setBlackBusinesses(companies);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(PageWrapper, null, __jsx(\"div\", {\n    className: \"bg-black-2 mt-20 mt-lg-22 pt-1 pt-lg-5 pb-10\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(Search, {\n    businesses: true,\n    parentCallback: callBackFunction\n  }))))), __jsx(\"div\", {\n    className: \"bg-default-1 pt-9 pb-13 pb-xl-30 pb-13 position-relative overflow-hidden\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row justify-content-center\"\n  }, __jsx(\"div\", {\n    className: \"col-12 col-lg-10 col-xl-12\"\n  }, router.query.q && router.query.q.length > 0 && __jsx(\"h2\", {\n    className: \"font-size-8 mb-6\"\n  }, \"You\\u2019re searching \\\"\", router.query.q.charAt(0).toUpperCase() + router.query.q.slice(1), \"\\\"\"), __jsx(\"form\", {\n    className: \"mb-8\"\n  }, __jsx(\"div\", {\n    className: \"search-filter from-group d-flex align-items-center flex-wrap\"\n  }, __jsx(\"div\", {\n    className: \"mr-5 mb-5\"\n  }, __jsx(_StyledSelect, {\n    // options={defaultIndustries}\n    className: \"font-size-4\" // border={false}\n    ,\n    sendFilters: getFilters\n  })))), __jsx(\"div\", {\n    className: \"d-flex align-items-center justify-content-between mb-6\"\n  }, __jsx(\"h5\", {\n    className: \"font-size-4 font-weight-normal text-gray\"\n  }, \"Showing\", __jsx(\"span\", {\n    className: \"text-black-2 pl-1\"\n  }, blackBusinesses.length), ' ', \"matched businesses\")))), __jsx(SearchTab, {\n    businesses: blackBusinesses\n  })))));\n};\n\nconst getFirebaseCollection = async () => {\n  let companies = await db.collection('companies').orderBy('business_name').get().then(res => {\n    return res.docs.map(entry => entry.data());\n  }).catch(err => console.log('ERROR', err));\n  return companies;\n};\n\nconst getAlgoliaRecords = async query => {\n  const client = algoliasearch(process.env.ALGOLIA_APP_ID, process.env.ALGOLIA_API_KEY);\n  const index = client.initIndex(process.env.ALGOLIA_INDEX_NAME);\n  let companies = index.search(query).then(({\n    hits\n  }) => {\n    return hits;\n  }).catch(err => {\n    console.log(err);\n  });\n  return companies;\n};\n\nexport async function getServerSideProps(context) {\n  let search = context.query.q;\n  let companies = !search ? await getFirebaseCollection() : await getAlgoliaRecords(search);\n  return {\n    props: {\n      companies\n    } // will be passed to the page component as props\n\n  };\n}\nexport default SearchGrid;",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}
