{
  "ast": null,
  "code": "var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useContext } from \"react\";\nimport GlobalContext from \"../../context/GlobalContext\";\nconst headerConfigDefault = {\n  theme: \"light\",\n  bgClass: \"dynamic-sticky-bg\",\n  variant: \"primary\",\n  align: \"right\",\n  isFluid: false,\n  button: \"account\",\n  // profile, cart, cta, account, null\n  buttonText: \"Get started free\",\n  // profile, cart, cta, account, null\n  reveal: true\n};\nconst footerConfigDefault = {\n  theme: \"dark\",\n  style: \"style1\" //style1, style2, style3\n\n};\n\nconst PageWrapper = ({\n  children,\n  headerConfig = null,\n  footerConfig = null\n}) => {\n  const gContext = useContext(GlobalContext);\n  useEffect(() => {\n    if (gContext.themeDark) {\n      gContext.setHeader(_objectSpread(_objectSpread(_objectSpread({}, headerConfigDefault), headerConfig), {}, {\n        theme: \"dark\"\n      }));\n      gContext.setFooter(_objectSpread(_objectSpread(_objectSpread({}, footerConfigDefault), footerConfig), {}, {\n        theme: \"dark\"\n      }));\n    } else {\n      gContext.setHeader(_objectSpread(_objectSpread({}, headerConfigDefault), headerConfig));\n      gContext.setFooter(_objectSpread(_objectSpread({}, footerConfigDefault), footerConfig));\n    }\n  }, [gContext.themeDark]);\n  return __jsx(React.Fragment, null, children);\n};\n\nexport default PageWrapper;",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}
