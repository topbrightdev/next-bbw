{
  "ast": null,
  "code": "var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport Link from \"next/link\";\nimport imgL1Logo from \"../../assets/image/black-logo-horizontal.png\";\nimport imgL1LogoWhite from \"../../assets/image/black-logo-horizontal.png\";\n\nconst Logo = (_ref) => {\n  let {\n    white,\n    height,\n    className = \"\"\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"white\", \"height\", \"className\"]);\n\n  return __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", _extends({\n    className: `d-block ${className}`\n  }, rest), white ? __jsx(\"img\", {\n    src: imgL1LogoWhite,\n    alt: \"black-business-warehouse\",\n    height: \"10vh\",\n    width: \"auto\"\n  }) : __jsx(\"img\", {\n    src: imgL1Logo,\n    alt: \"black-business-warehouse\",\n    height: \"40vh\",\n    width: \"auto\"\n  })));\n};\n\nexport default Logo;",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}
